# Apache server
upstream django {
    server         127.0.0.1:9000;
}

# Redirect all requests on the www subdomain to the root domain
server {
        listen      80;
        server_name www.translat4india.com;
        rewrite ^/(.*) http://translate4india.com/$1 permanent;
}

# Serve static files and redirect any other request to Apache
server {
        listen       80;
        server_name  translate4india.com;
        root        /home/ubuntu/workspace/bhagirath/releases/current/bhagirath/;
	access_log /home/ubuntu/workspace/bhagirath/logs/nginx.access.log;
	error_log /home/ubuntu/workspace/bhagirath/logs/nginx.error.log;
        

        rewrite ^/admin/(.*) https://translate4india.com/admin/$1 permanent;
        rewrite ^/sign_up/(.*) https://translate4india.com/sign_up/$1 permanent;

        # Check if a file exists at bhagirath for the incoming request.
        # If it doesn't proxy to Apache/Django.
        try_files $uri @django;
        
        # Setup named location for Django requests and handle proxy details
        location @django {
                proxy_pass         http://django;
                proxy_redirect     off;
                proxy_set_header   Host             $host;
                proxy_set_header   X-Real-IP        $remote_addr;
                proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }
}

server {
        listen       443; #replace with your own ip address
        server_name  translate4india.com;

        root        /home/ubuntu/workspace/bhagirath/releases/current/bhagirath;
	access_log /home/ubuntu/workspace/bhagirath/logs/nginx.ssl.access.log;
	error_log /home/ubuntu/workspace/bhagirath/logs/nginx.ssl.error.log;

        ssl on;
        ssl_certificate /home/ubuntu/workspace/bhagirath/releases/current/conf/translate4india/translate4india.crt;
        ssl_certificate_key /home/ubuntu/workspace/bhagirath/releases/current/conf/translate4india/translate4india.key;
        ssl_prefer_server_ciphers       on;
        
        # Check if a file exists at / for the incoming request.
        # If it doesn't proxy to Apache/Django.
        try_files $uri @django;
        
        # Setup named location for Django requests and handle proxy details
        location @django {
                proxy_pass         http://django;
                proxy_redirect     off;
                proxy_set_header   Host             $host;
                proxy_set_header   X-Real-IP        $remote_addr;
                proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Protocol https;
        }
        	    
}
